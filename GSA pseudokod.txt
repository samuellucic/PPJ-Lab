GENERATOR ALGO

dodaj produkciju S'->S
dodaj pocetni znak q0

odredi sve prazne znakove:
	promjena = True
	u skup dodaj sve koji imaju eps produkcije
	while(promjena):
		promjena = False
		dodaj u skup sve koji imaju iskljucivo znakove iz skupa na desnoj strani neke produkcije
			ako uspjesno:
				promjena = True
	
odredi sve skupove Zapocinje:
	udzb str 101, relacija ZapocinjeIzravnoZnakom, relacija ZapocinjeZnakom

odredi sve lr(0) jedinke

prvo q0 u S' eps prijelaz, S' ce biti dodana produkcija sa skupom zavrsnog znaka niza

rekurzija(prva lr(1)):
	ako znak nakon tocke == zavrsni znak niza:
		return
	ako znak nakon tocke == zavrsni znak || == nezavrsni znak:
		dodaj prijelaz u lr(0) jedinku koja je jednaka prethodnoj, ali s tockom pomaknutom za 1 udesno
		prijelaz ima zavrsni/nezavrsni znak koji je identificiran
		ako stavka s kojom si povezao nema lr(1) skup:
			skup za lr(1) stavku je jednak skupu prethodnog
			rekurzija(nova lr(1))
	ako znak nakon tocke == nezavrsni znak:
		dodaj eps prijelaze u lr(0) jedinke koje predstavljaju pocetak produkcija oznacenih nezavrsnim znakom
		za svaku novopovezanu lr(0) stavku:
			ako stavka s kojom si povezao nema lr(1) skup:
				odredi skup lr(1) stavke:
					odredi niz nakon tog znaka iz originalne produkcije:
						ako niz == eps:
							skup lr(1) = skup lr(1) jedinke roditelja
							continue				
						inace ako niz samo prazni znakovi:
							skup lr(1) = skup lr(1) jedinke roditelja
						lr(1) += Zapocinje(niz nakon tog znaka iz originalne produkcije)
		za svaku novopovezanu lr(1) stavku:
			rekurzija(nova lr(1))

sad imas enka
pretvori u nka (algo iz utr udzb, skip dio za prihvatljiva stanja jer su sva prihvatljiva)
pretvoru u dka (algo iz utr udzb, skip dio za prihvatljiva stanja jer su sva prihvatljiva)
minimiziraj dka (utr labos algo)
iz dka napravi tablicu (algo ppj udzb)			
